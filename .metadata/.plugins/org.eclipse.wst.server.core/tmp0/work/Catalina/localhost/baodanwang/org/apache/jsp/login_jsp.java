/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2018-04-08 09:19:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html id=\"extr-page\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>逸尘智创后台管理-登录</title>\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- #CSS Links -->\r\n");
      out.write("<!-- Basic Styles -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- SmartAdmin Styles : Caution! DO NOT change the order -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/smartadmin-production-plugins.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/smartadmin-production.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/smartadmin-skins.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- SmartAdmin RTL Support -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"css/smartadmin-rtl.min.css\">\r\n");
      out.write("<!-- #FAVICONS -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"img/favicon/favicon.ico\"\r\n");
      out.write("\ttype=\"image/x-icon\">\r\n");
      out.write("<link rel=\"icon\" href=\"img/favicon/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"animated fadeInDown\">\r\n");
      out.write("\t<div id=\"main\" role=\"main\">\r\n");
      out.write("\t\t<!-- MAIN CONTENT -->\r\n");
      out.write("\t\t<div id=\"content\" class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tclass=\"col-xs-12 col-sm-12 col-md-7 col-lg-8 hidden-xs hidden-sm\">\r\n");
      out.write("\t\t\t\t\t<h1 class=\"txt-color-red login-header-big\">逸尘智创后台管理</h1>\r\n");
      out.write("\t\t\t\t\t<div class=\"hero\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"pull-left login-desc-box-l\">\r\n");
      out.write("\t\t\t\t\t\t\t<h4 class=\"paragraph-header\">欢迎使用逸尘智创后台管理系统</h4>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-4\">\r\n");
      out.write("\t\t\t\t\t<div class=\"well no-padding\">\r\n");
      out.write("\t\t\t\t\t\t<form action=\"login.action\" id=\"login-form\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"smart-form client-form\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t<header> 登录 </header>\r\n");
      out.write("\t\t\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t\t\t<section>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"label\">账号</label> <label class=\"input\"><i\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"icon-append fa fa-user\"></i> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname=\"username\" maxlength=\"20\"> <b\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"tooltip tooltip-top-right\"><i\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-user txt-color-teal\"></i> 请输入账号</b></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</section>\r\n");
      out.write("\t\t\t\t\t\t\t\t<section>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"label\">密码</label> <label class=\"input\"><i\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"icon-append fa fa-lock\"></i> <input type=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname=\"password\" maxlength=\"20\"> <b\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"tooltip tooltip-top-right\"><i\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-lock txt-color-teal\"></i> 请输入密码</b></label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</section>\r\n");
      out.write("\t\t\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.error }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"error\" />\r\n");
      out.write("\t\t\t\t\t\t\t<footer>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">登录</button>\r\n");
      out.write("\t\t\t\t\t\t\t</footer>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--================================================== -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- PACE LOADER - turn this on if you want ajax loading to show (caution: uses lots of memory on iDevices)-->\r\n");
      out.write("\t<script src=\"js/plugin/pace/pace.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- IMPORTANT: APP CONFIG -->\r\n");
      out.write("\t<script src=\"js/app.config.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- JS TOUCH : include this plugin for mobile drag / drop touch events \t\t\r\n");
      out.write("\t\t<script src=\"js/plugin/jquery-touch/jquery.ui.touch-punch.min.js\"></script> -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- BOOTSTRAP JS -->\r\n");
      out.write("\t<script src=\"js/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- JQUERY MASKED INPUT -->\r\n");
      out.write("\t<script src=\"js/plugin/masked-input/jquery.maskedinput.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- MAIN APP JS FILE -->\r\n");
      out.write("\t<script src=\"js/app.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar error = document.getElementById(\"error\").value;\r\n");
      out.write("\t\tif (error != null && error != \"\") {\r\n");
      out.write("\t\t\talert(error)\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction submits(e) {\r\n");
      out.write("\t\t\tvar userName = document.getElementsByName(\"userName\");\r\n");
      out.write("\t\t\tvar password = document.getElementsByName(\"password\");\r\n");
      out.write("\t\t\tif (userName[0].value.length < 1 || password[0].value.length < 1) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
