package sequence;

public class MergeSort {
	static int comp = 0;
	static int swap = 0;
	public static void main(String[] args){
		int[] a = new int[]{5,79,6,64,92,82};
		mergeSort(a,0,a.length-1);
		//print(a);
		System.out.println("比较次数："+comp+",移动次数："+swap);
	}
	public static void mergeSort(int[] a,int low,int high){
		System.out.println("外"+low+high);
		if(low < high){
			int mid = (low + high)/2;
			System.out.println("内A"+low+mid+high);
			mergeSort(a,low,mid);
			System.out.println("内B"+low+mid+high);
			mergeSort(a,mid+1,high);
			System.out.println("内C"+low+mid+high);
			merge2SortedSubArr(a,low,mid,high);
			//System.out.print("low ="+low+"\tmid ="+mid+"\thigh ="+high+"\t");
			//print(a);
		}
	}
	public static void merge2SortedSubArr(int[] a,int p,int q,int r){
		System.out.println("low ="+p+"\tmid ="+q+"\thigh ="+r+"\t");
		int[] b = new int[r+1];
		System.out.println(b.length);
		int i = p,j = q+1,k = p;
		while(i <= q && j<= r){
			if(a[i] <= a[j] & (comp ++)>=0){
				b[k++] = a[i++];
				//swap ++ ;
				System.out.println("1i_j_k "+i+j+k);
			}
			else{
				b[k++] = a[j++];
				//swap ++ ;
				System.out.println("2i_j_k "+i+j+k);
			}
			System.out.println("comp"+comp);
		}
		if(i == q+1){
			for(;j<=r;j++){
				b[k++] = a[j];
				//swap ++ ;
				System.out.println("3i_j_k "+i+j+k);
			}
		}
		else {
			for(;i<=q;i++){
				b[k++] = a[i];
				//swap ++ ;
				System.out.println("4i_j_k "+i+j+k);
			}
		}
		for(i=p;i<=r;i++){
			a[i] = b[i];
			swap ++ ;
			System.out.println("a["+i+"]  "+a[i]+"swap"+swap);
		}
		//System.out.print("i="+i+"\tj="+j+"\tk="+k+"\tp="+p+"\tq="+q+"\tr="+r+"\t");
		//print(a);
	}
	public static void print(int[] a){
		for(int i=0;i<a.length;i++){
			System.out.print(a[i]+"、");
		}
		System.out.println();
	}
}
